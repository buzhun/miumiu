[{"/Users/miaoball/shimo/my-ts/src/index.tsx":"1","/Users/miaoball/shimo/my-ts/src/reportWebVitals.ts":"2","/Users/miaoball/shimo/my-ts/src/App.tsx":"3","/Users/miaoball/shimo/my-ts/src/Todos.tsx":"4","/Users/miaoball/shimo/my-ts/src/containers/todoContainer.ts":"5","/Users/miaoball/shimo/my-ts/src/unstated-next.tsx":"6"},{"size":515,"mtime":1610949394392,"results":"7","hashOfConfig":"8"},{"size":425,"mtime":1610941087794,"results":"9","hashOfConfig":"8"},{"size":137,"mtime":1610960579068,"results":"10","hashOfConfig":"8"},{"size":1404,"mtime":1610961468341,"results":"11","hashOfConfig":"8"},{"size":433,"mtime":1610952301154,"results":"12","hashOfConfig":"8"},{"size":1097,"mtime":1610958421603,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1mqfzdn",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/miaoball/shimo/my-ts/src/index.tsx",[],["29","30"],"/Users/miaoball/shimo/my-ts/src/reportWebVitals.ts",[],"/Users/miaoball/shimo/my-ts/src/App.tsx",[],"/Users/miaoball/shimo/my-ts/src/Todos.tsx",["31","32"],"import React, { useEffect, useReducer, useRef } from \"react\";\nimport { Container } from \"unstated\";\nimport TodoContainer from \"./containers/todoContainer\";\n\ntype Selector<S, P> = (state: S) => P;\n\nfunction isEqual(a: any, b: any) {\n  return a === b;\n}\n\nexport function createUseUnstated<S extends Object>(container: Container<S>) {\n  return function useUnstated<R>(\n    selector: Selector<S, R>,\n    equalityFn = isEqual\n  ) {\n    console.log(1);\n    const [, forceRender] = useReducer((s: number) => s + 1, 0);\n    const latestStoreState = useRef<S>(container.state);\n    const latestResult = useRef<R>(selector(container.state));\n\n    useEffect(() => {\n      const onChange = () => {\n        if (latestStoreState.current === container.state) {\n          return;\n        }\n        latestStoreState.current = container.state;\n        const result = selector(container.state);\n        if (!equalityFn(result, latestResult.current)) {\n          latestResult.current = result;\n          forceRender();\n        }\n      };\n      container.subscribe(onChange);\n    }, []);\n    return latestResult.current;\n  };\n}\n\nfunction Todos() {\n  const useTodo = createUseUnstated<TodoContainer>(TodoContainer);\n  const todo = useTodo((state) => state.todo);\n  return (\n    <>\n      {todos.map((item) => (\n        <li key={item}>\n          <span>{item}</span>\n        </li>\n      ))}\n    </>\n  );\n}\n\nexport default Todos;\n","/Users/miaoball/shimo/my-ts/src/containers/todoContainer.ts",[],["33","34"],"/Users/miaoball/shimo/my-ts/src/unstated-next.tsx",[],{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":34,"column":8,"nodeType":"41","endLine":34,"endColumn":10,"suggestions":"42"},{"ruleId":"43","severity":1,"message":"44","line":41,"column":9,"nodeType":"45","messageId":"46","endLine":41,"endColumn":13},{"ruleId":"35","replacedBy":"47"},{"ruleId":"37","replacedBy":"48"},"no-native-reassign",["49"],"no-negated-in-lhs",["50"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'equalityFn' and 'selector'. Either include them or remove the dependency array. If 'selector' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["51"],"@typescript-eslint/no-unused-vars","'todo' is assigned a value but never used.","Identifier","unusedVar",["49"],["50"],"no-global-assign","no-unsafe-negation",{"desc":"52","fix":"53"},"Update the dependencies array to be: [equalityFn, selector]",{"range":"54","text":"55"},[1062,1064],"[equalityFn, selector]"]